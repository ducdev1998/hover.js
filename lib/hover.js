// Generated by CoffeeScript 1.4.0
(function() {
  var attrEscape, pixelValue;

  attrEscape = function(attr) {
    return attr.replace(/"/g, '%22').replace(/'/g, '%27');
  };

  pixelValue = function(value) {
    return "" + value + "px";
  };

  this.generateHoverImages = function() {
    $('.hover-image').remove();
    return $('img.hover-zoom').each(function(i) {
      var $hoverImage, $this, hoverImageId, largeImgSrc;
      $this = $(this);
      largeImgSrc = $this.data('img-large');
      if (largeImgSrc == null) {
        return;
      }
      hoverImageId = "hover-image-" + i;
      $('body').append("<div id='" + hoverImageId + "' class='hover-image'>\n  <img src='" + (attrEscape(largeImgSrc)) + "' />\n</div>");
      $hoverImage = $("#" + hoverImageId);
      $this.data('hover-image-div', $hoverImage);
      return $this.data('hover-image-img', $hoverImage.find('img'));
    }).mousemove(function(e) {
      var $hoverImage, $this, absOffsets, clientX, clientY, hasScrollBar, imageHeight, imgPadding, k, mouseOffset, scrollBarOffset, v, windowHeight, windowWidth, _results;
      $this = $(this);
      $hoverImage = $this.data('hover-image-div');
      clientX = e.clientX, clientY = e.clientY;
      windowHeight = innerHeight;
      windowWidth = innerWidth;
      imageHeight = $hoverImage.outerHeight();
      mouseOffset = 25;
      hasScrollBar = $(document).height() > $(window).height();
      scrollBarOffset = 15;
      absOffsets = {
        right: false,
        left: false,
        top: clientY,
        bottom: false
      };
      imgPadding = {
        top: 20,
        side: 20
      };
      if ((clientY + imageHeight + imgPadding.top) > windowHeight) {
        absOffsets.top = false;
        absOffsets.bottom = 6;
      }
      if (clientX > (windowWidth / 2)) {
        absOffsets.right = windowWidth - clientX + mouseOffset;
        if (hasScrollBar) {
          absOffsets.right -= scrollBarOffset;
        }
      } else {
        absOffsets.left = clientX + mouseOffset;
        if (hasScrollBar) {
          imgPadding.side += scrollBarOffset;
        }
      }
      $this.data('hover-image-img').css({
        'max-width': (absOffsets.left ? windowWidth - mouseOffset - clientX : clientX - mouseOffset) - imgPadding.side,
        'max-height': windowHeight - imgPadding.top
      });
      $hoverImage.css('display', 'block');
      _results = [];
      for (k in absOffsets) {
        v = absOffsets[k];
        _results.push($hoverImage.css(k, v === false ? '' : pixelValue(v)));
      }
      return _results;
    }).mouseleave(function() {
      return $(this).data('hover-image-div').css('display', 'none');
    });
  };

  $(function() {
    return generateHoverImages();
  });

}).call(this);
